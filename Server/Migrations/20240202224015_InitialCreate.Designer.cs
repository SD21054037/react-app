// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(yourDbContext))]
    [Migration("20240202224015_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.dbAdmin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.HasKey("AdminID");

                    b.HasIndex("GebruikerID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Model.dbBedrijf", b =>
                {
                    b.Property<int>("BedrijfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BedrijfID"));

                    b.Property<string>("Bedrijfsnaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WebsiteLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BedrijfID");

                    b.HasIndex("GebruikerID");

                    b.ToTable("bedrijven");
                });

            modelBuilder.Entity("Model.dbChatBericht", b =>
                {
                    b.Property<int>("ChatBerichtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatBerichtID"));

                    b.Property<string>("Inhoud_Bericht")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OntvangerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZenderID")
                        .HasColumnType("int");

                    b.HasKey("ChatBerichtID");

                    b.HasIndex("OntvangerID");

                    b.HasIndex("ZenderID");

                    b.ToTable("berichten");
                });

            modelBuilder.Entity("Model.dbErvaringsdeskundige", b =>
                {
                    b.Property<int>("ErvaringsdeskundigeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ErvaringsdeskundigeID"));

                    b.Property<string>("Aandoening_Ziekte")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<string>("Hulpmiddelen")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TypeBeperking")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ErvaringsdeskundigeID");

                    b.HasIndex("GebruikerID");

                    b.ToTable("ervaringsdeskundigen");
                });

            modelBuilder.Entity("Model.dbGebruiker", b =>
                {
                    b.Property<int>("GebruikerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GebruikerID"));

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Datum_Registratie")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefoonnummer")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Type_Gebruiker")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GebruikerID");

                    b.ToTable("Gebruikers");
                });

            modelBuilder.Entity("Model.dbOnderzoek", b =>
                {
                    b.Property<int>("OnderzoekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnderzoekID"));

                    b.Property<int>("BedrijfID")
                        .HasColumnType("int");

                    b.Property<string>("Beloning")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeBeperking")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("OnderzoekID");

                    b.HasIndex("BedrijfID");

                    b.ToTable("onderzoeken");
                });

            modelBuilder.Entity("Model.dbAdmin", b =>
                {
                    b.HasOne("Model.dbGebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Model.dbBedrijf", b =>
                {
                    b.HasOne("Model.dbGebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Model.dbChatBericht", b =>
                {
                    b.HasOne("Model.dbGebruiker", "Ontvanger")
                        .WithMany()
                        .HasForeignKey("OntvangerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.dbGebruiker", "Zender")
                        .WithMany()
                        .HasForeignKey("ZenderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ontvanger");

                    b.Navigation("Zender");
                });

            modelBuilder.Entity("Model.dbErvaringsdeskundige", b =>
                {
                    b.HasOne("Model.dbGebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Model.dbOnderzoek", b =>
                {
                    b.HasOne("Model.dbBedrijf", "Bedrijf")
                        .WithMany()
                        .HasForeignKey("BedrijfID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bedrijf");
                });
#pragma warning restore 612, 618
        }
    }
}
