// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(yourDbContext))]
    partial class yourDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.dbAdmin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminID"));

                    b.Property<int?>("GebruikerID")
                        .HasColumnType("int");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Model.dbBedrijf", b =>
                {
                    b.Property<int>("BedrijfID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BedrijfID"));

                    b.Property<string>("Bedrijfsnaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<string>("bedrijfsadres")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("bedrijfsplaats")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("bedrijfspostcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("wachtwoord")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("wachtwoordbevestiging")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("websiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BedrijfID");

                    b.ToTable("bedrijven");
                });

            modelBuilder.Entity("Model.dbChatBericht", b =>
                {
                    b.Property<int>("ChatBerichtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatBerichtID"));

                    b.Property<string>("Inhoud_Bericht")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OntvangerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZenderID")
                        .HasColumnType("int");

                    b.HasKey("ChatBerichtID");

                    b.HasIndex("OntvangerID");

                    b.HasIndex("ZenderID");

                    b.ToTable("berichten");
                });

            modelBuilder.Entity("Model.dbGebruiker", b =>
                {
                    b.Property<int>("GebruikerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GebruikerID"));

                    b.Property<string>("Aandoening_Ziekte")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Commerciele_Benadering")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Datum_Registratie")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Geboortedatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hulpmiddelen")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Telefoonnummer")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type_Beperking")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Verstandelijkheid")
                        .HasColumnType("bit");

                    b.Property<int?>("Voorkeur_Benadering")
                        .HasColumnType("int");

                    b.Property<string>("Voorkeur_Onderzoek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GebruikerID");

                    b.ToTable("Gebruikers");
                });

            modelBuilder.Entity("Model.dbLijstgebruikers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<int>("OnderzoekID")
                        .HasColumnType("int");

                    b.Property<int?>("dbGebruikerGebruikerID")
                        .HasColumnType("int");

                    b.Property<int?>("dbGebruikerGebruikerID1")
                        .HasColumnType("int");

                    b.Property<int?>("dbOnderzoekOnderzoekID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dbGebruikerGebruikerID");

                    b.HasIndex("dbGebruikerGebruikerID1");

                    b.HasIndex("dbOnderzoekOnderzoekID");

                    b.ToTable("lijstgebruikers");
                });

            modelBuilder.Entity("Model.dbOnderzoek", b =>
                {
                    b.Property<int>("OnderzoekID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OnderzoekID"));

                    b.Property<int?>("BedrijfID")
                        .HasColumnType("int");

                    b.Property<string>("Beloning")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EngelsTaligOnderzoek")
                        .HasColumnType("bit");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeBeperking")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TypeOnderzoek")
                        .HasColumnType("int");

                    b.HasKey("OnderzoekID");

                    b.HasIndex("BedrijfID");

                    b.ToTable("onderzoeken");
                });

            modelBuilder.Entity("Model.dbOuder", b =>
                {
                    b.Property<int>("OuderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OuderID"));

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GebruikerID")
                        .HasColumnType("int");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OuderID");

                    b.HasIndex("GebruikerID");

                    b.ToTable("Ouders");
                });

            modelBuilder.Entity("Model.dbChatBericht", b =>
                {
                    b.HasOne("Model.dbGebruiker", "Ontvanger")
                        .WithMany()
                        .HasForeignKey("OntvangerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Model.dbGebruiker", "Zender")
                        .WithMany()
                        .HasForeignKey("ZenderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ontvanger");

                    b.Navigation("Zender");
                });

            modelBuilder.Entity("Model.dbLijstgebruikers", b =>
                {
                    b.HasOne("Model.dbGebruiker", null)
                        .WithMany("OnderzoekGebruikers")
                        .HasForeignKey("dbGebruikerGebruikerID");

                    b.HasOne("Model.dbGebruiker", null)
                        .WithMany("lijstgebruikers")
                        .HasForeignKey("dbGebruikerGebruikerID1");

                    b.HasOne("Model.dbOnderzoek", null)
                        .WithMany("OnderzoekGebruikers")
                        .HasForeignKey("dbOnderzoekOnderzoekID");
                });

            modelBuilder.Entity("Model.dbOnderzoek", b =>
                {
                    b.HasOne("Model.dbBedrijf", "Bedrijf")
                        .WithMany()
                        .HasForeignKey("BedrijfID");

                    b.Navigation("Bedrijf");
                });

            modelBuilder.Entity("Model.dbOuder", b =>
                {
                    b.HasOne("Model.dbGebruiker", "Gebruiker")
                        .WithMany()
                        .HasForeignKey("GebruikerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gebruiker");
                });

            modelBuilder.Entity("Model.dbGebruiker", b =>
                {
                    b.Navigation("OnderzoekGebruikers");

                    b.Navigation("lijstgebruikers");
                });

            modelBuilder.Entity("Model.dbOnderzoek", b =>
                {
                    b.Navigation("OnderzoekGebruikers");
                });
#pragma warning restore 612, 618
        }
    }
}
